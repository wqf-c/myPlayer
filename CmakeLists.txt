# CMakeList.txt : CMake project for PcClient, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.8)

project ("theia2-broadcaster" VERSION 0.0.1)

# --------------------------------------------------------------------------
# specify the C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_CXX_FLAGS "-D__STDC_CONSTANT_MACROS")

IF(MSVC) # Check if we are using the Visual Studio compiler
    SET(CMAKE_CXX_FLAGS "/EHsc")  # deal with MSVC Warning C4530
ENDIF(MSVC)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS")
	Add_Definitions(-DWIN32)
	Add_Definitions(-D_DEBUG)
	Add_Definitions(-D_CONSOLE)
	

##dependencies
######################################
#  wxWidget lib setting
######################################
#在此用的是wxWidget编译好的二进制文件
#wxWidget官网下载的header文件位置
if(WIN32)
	find_path(WXWIDGET_INCLUDE_DIR msvc/wx/setup.h)
	#wxWidget官网下载的dev里的lib文件位置
	find_path(WXWIDGET_LIBRARY_DIR vc_x64_lib)
	set(WXWIDGET_INCLUDE_MSVC_DIR ${WXWIDGET_INCLUDE_DIR}/msvc)
else()
endif()

######################################
#  SDL2 lib setting
######################################
#make sure SDL2.dll is in your PATH.
 
#set(SDL_INCLUDE_DIR "E:/ffmpeg/SDL2-2.0.12/include")
if(WIN32)
	find_path(SDL_INCLUDE_DIR SDL2/SDL.h)
else()
	find_path(SDL_INCLUDE_DIR SDL2/SDL.h)
endif()
	find_library(SDL_LIBRARY SDL2)
#
#link_directories("E:/ffmpeg/SDL2-2.0.12/lib/x64")

######################################
#  FFmpeg lib setting
######################################
#make sure ffmpeg/bin is in your PATH.

find_path(AVCODEC_INCLUDE_DIR libavcodec/avcodec.h)
find_library(AVCODEC_LIBRARY avcodec)

find_path(AVFORMAT_INCLUDE_DIR libavformat/avformat.h)
find_library(AVFORMAT_LIBRARY avformat)

find_path(AVUTIL_INCLUDE_DIR libavutil/avutil.h)
find_library(AVUTIL_LIBRARY avutil)

find_path(AVDEVICE_INCLUDE_DIR libavdevice/avdevice.h)
find_library(AVDEVICE_LIBRARY avdevice)

find_path(AVFILTER_INCLUDE_DIR libavfilter/avfilter.h)
find_library(AVFILTER_LIBRARY avfilter)

find_path(POSTPROC_INCLUDE_DIR libpostproc/postprocess.h)
find_library(POSTPROC_LIBRARY postproc)

find_path(SWRESAMPLE_INCLUDE_DIR libswresample/swresample.h)
find_library(SWRESAMPLE_LIBRARY swresample)

find_path(SWSCALE_INCLUDE_DIR libswscale/swscale.h)
find_library(SWSCALE_LIBRARY swscale)


######################################
#  information
######################################
message(====PROJECT_INFO====)
message(CMAKE_SOURCE_DIR=${CMAKE_SOURCE_DIR})
message(PROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR})

message(====WXWIDGET_INFO====)
message(WXWIDGET_INCLUDE_DIR=${WXWIDGET_INCLUDE_DIR})
message(WXWIDGET_LIBRARY_DIR=${WXWIDGET_LIBRARY_DIR})

message(====SDL_INFO====)
message(SDL_INCLUDE_DIR=${SDL_INCLUDE_DIR})
message(SDL_LIBRARY=${SDL_LIBRARY})

message(====FFMPEG_INFO====)
message("--------------------")
message(AVCODEC_INCLUDE_DIR=${AVCODEC_INCLUDE_DIR})
message(AVCODEC_LIBRARY=${AVCODEC_LIBRARY})
message("--------------------")
message(AVFORMAT_INCLUDE_DIR=${AVFORMAT_INCLUDE_DIR})
message(AVFORMAT_LIBRARY=${AVFORMAT_LIBRARY})
message("--------------------")
message(AVUTIL_INCLUDE_DIR=${AVUTIL_INCLUDE_DIR})
message(AVUTIL_LIBRARY=${AVUTIL_LIBRARY})
message("--------------------")
message(AVDEVICE_INCLUDE_DIR=${AVDEVICE_INCLUDE_DIR})
message(AVDEVICE_LIBRARY=${AVDEVICE_LIBRARY})
message("--------------------")
message(AVFILTER_INCLUDE_DIR=${AVFILTER_INCLUDE_DIR})
message(AVFILTER_LIBRARY=${AVFILTER_LIBRARY})
message("--------------------")
message(POSTPROC_INCLUDE_DIR=${POSTPROC_INCLUDE_DIR})
message(POSTPROC_LIBRARY=${POSTPROC_LIBRARY})
message("--------------------")
message(SWRESAMPLE_INCLUDE_DIR=${SWRESAMPLE_INCLUDE_DIR})
message(SWRESAMPLE_LIBRARY=${SWRESAMPLE_LIBRARY})
message("--------------------")
message(SWSCALE_INCLUDE_DIR=${SWSCALE_INCLUDE_DIR})
message(SWSCALE_LIBRARY=${SWSCALE_LIBRARY})


#include_directories( 
#	${WXWIDGET_INCLUDE_DIR}/msvc
#	${WXWIDGET_INCLUDE_DIR}
#)

if (WIN32)
	link_directories(${WXWIDGET_LIBRARY_DIR}/vc_x64_lib)
ELSE()

endif ()


    




# Add source to this project's executable.
add_executable (${PROJECT_NAME} 
		src/playAudio2.cpp
		src/playCamera.cpp
		)

# TODO: Add tests and install targets if needed.

target_include_directories( ${PROJECT_NAME}  
	PRIVATE 
		${PROJECT_SOURCE_DIR}/include
		${AVCODEC_INCLUDE_DIR} 
		${AVFORMAT_INCLUDE_DIR} 
		${AVUTIL_INCLUDE_DIR} 
		${AVDEVICE_INCLUDE_DIR}
		${AVFILTER_INCLUDE_DIR}
		${POSTPROC_INCLUDE_DIR}
		${SWRESAMPLE_INCLUDE_DIR}
		${SWSCALE_INCLUDE_DIR}
		${SDL_INCLUDE_DIR}
)

if(WIN32)
	target_include_directories(${PROJECT_NAME}
			PRIVATE
			${WXWIDGET_INCLUDE_DIR}
			${WXWIDGET_INCLUDE_DIR}/msvc
	)
else()
	# mac下配置的wx
	find_package(wxWidgets REQUIRED COMPONENTS net core base)
	include(${wxWidgets_USE_FILE})
	target_link_libraries(${PROJECT_NAME} PRIVATE ${wxWidgets_LIBRARIES})
ENDIF()

target_link_libraries( ${PROJECT_NAME}
	PRIVATE 
		${AVCODEC_LIBRARY} 
		${AVFORMAT_LIBRARY} 
		${AVUTIL_LIBRARY} 
		${AVDEVICE_LIBRARY}
		${AVFILTER_LIBRARY}
		${POSTPROC_LIBRARY}
		${SWRESAMPLE_LIBRARY}
		${SWSCALE_LIBRARY}
		${SDL_LIBRARY}
)

#add_executable (theia2-broadcaster "theia2-broadcaster.cpp" "theia2-broadcaster.h")

# TODO: Add tests and install targets if needed.
